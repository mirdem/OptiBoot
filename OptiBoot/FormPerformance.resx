<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAEACABgFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAu60AALmsAAC6qwAAuasAALqrAAC2kQAAsIEAAK+AAQCvgAEAsYEAAKp/AACzhAAAsIABALCB
        AQCvgAEAsIAAALCBAQCwgQEArX8AALCAAQCvgQEAsIEBAK+DAACvgAEAA9n0AAPX9AAD1/QAA9j0AAPX
        9AAA2/YAA9j1AAPY9AAA2vUAAtf1AALY9AAC1/QAAtf1ALutAAAC2PUAAtf1AALY9QAA1P8AANr/AALX
        9QAA1/UAANn1AALW9QAD2PQAAtf1AALX9QAC1/UAAtj1AAPY9AAC2PQAAtf0AALX9QCvgQEAsIABAK+A
        AACvgQAAr4EBALB/AAC6rAAAsIEBAAPY9QD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQDBSYAAAAAAAAEAwUmAAAAAAAABAMFJgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADPz8FAAAAAAAAAz8/BQAAAAAAAAM/
        PwUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPz8/PwAAAAAAAD8/Pz8AAAAA
        AAA/Pz8/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8/Pz8AAAAAAAA/Pz8/
        AAAAAAAAPz8/PwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/Pz8/AAAAAAAA
        Pz8/PwAAAAAAAD8/Pz8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPz8/PwAA
        AAAAAD8/Pz8AAAAAAAA/Pz8/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8/
        Pz8AAAAAAAA/Pz8/AAAAAAAAPz8/PwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA/Pz8/AAAAAAAAPz8/PwAAAAAAAD8/Pz8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAPz8/PwAAAAAAAD8/Pz8AAAAAAAA/Pz8/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAD8/Pz8AAAAAAAA/Pz8/AAAAAAAAPz8/PwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAALCjoWQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQBY6PAsAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAMDkBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEA9PgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAGDkBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQD0LAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAO0BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAPAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhAQEAUFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXOUBA
        QDoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWQEBAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABdAQEAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQAAAAAAAAAAAHBtBQUFBQUFBQUFBQUEdNQAA
        AAAAAAAAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQEAAAAAAAAAAABtBQUFBQUFBQUFBQUFB
        QR0AAAAAAAAAAEBAQEAAAAAAAAAAAAAAAAAAAAQDPz8/Pz8/Pz9AQEBAAAAAAAAAAABBQUFBQUFBQUFB
        QUFBQUFBAAAAAAAAAABAQEBAPz8/Pz8/Pz8FJgAAAAADPz8/Pz8/Pz8/QEBAQAAAAAAAAAAAQUFBQUFB
        QUFBQUFBQUFBQQAAAAAAAAAAQEBAQD8/Pz8/Pz8/PwUAAAAAAz8/Pz8/Pz8/P0BAQEAAAAAAAAAAHkFB
        QR8AAAAAAAAAACBBQUEhAAAAAAAAAEBAQEA/Pz8/Pz8/Pz8FAAAAAAECPz8/Pz8/Pz9AQEBAAAAAAAAA
        ISVBQUE2AAAAAAAAAAA3QUFBOC4AAAAAAABAQEBAPz8/Pz8/Pz8DBAAAAAAAAAAAAAAAAAAAQEBAQAAA
        HBtBQUFBQUFBNAAAAAAAAAAAMUFBQUFBQUEdNQAAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBA
        QEAAABtBQUFBQUFBMyoAAAAAAAAAACsyQUFBQUFBQR0AAEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABAQEBAAABBQUFBQUFBLC4AAAAAAAAAAAAALjJBQUFBQUFBAABAQEBAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAQEBAQAAAQUFBQTAkLyoAAAAAAAAAAAAAAAArMSQwQUFBQQAAQEBAQAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEBAQEAAAEFBQUEAAAAAAAAAAAAAAAAAAAAAAAAAAEFBQUEAAEBAQEAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABAQEBAAABBQUFBAAAAAAAAAAAAAAAAAAAAAAAAAABBQUFBAABAQEBAAAAAAAAA
        AAAAAAAAAAAEAz8/Pz8/Pz8/QEBAQAAAQUFBQQAAAAAAAAAAAAAAAAAAAAAAAAAAQUFBQQAAQEBAQD8/
        Pz8/Pz8/BSYAAAAAAz8/Pz8/Pz8/P0BAQEAAAEFBQUEAAAAAAAAAAAAAAAAAAAAAAAAAAEFBQUEAAEBA
        QEA/Pz8/Pz8/Pz8FAAAAAAM/Pz8/Pz8/Pz9AQEBAAABBQUFBAAAAAAAAAAAAAAAAAAAAAAAAAABBQUFB
        AABAQEBAPz8/Pz8/Pz8/BQAAAAABAj8/Pz8/Pz8/QEBAQAAAQUFBQQAAAAAAAAAAAAAAAAAAAAAAAAAA
        QUFBQQAAQEBAQD8/Pz8/Pz8/AwQAAAAAAAAAAAAAAAAAAEBAQEAAAEFBQUEAAAAAAAAAAAAAAAAAAAAA
        AAAAAEFBQUEAAEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBAAABBQUFBAAAAAAAAAAAAAAAA
        AAAAAAAAAABBQUFBAABAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQAAAQUFBQSAjJyoAAAAA
        AAAAAAAAAAAqLyMgQUFBQQAAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQEAAAEFBQUFBQUEp
        LQAAAAAAAAAAAAAuLEFBQUFBQUEAAEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBAAAAbQUFB
        QUFBQSkqAAAAAAAAAAArLEFBQUFBQUEdAABAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQAAA
        GRpBQUFBQUFBJwAAAAAAAAAAKEFBQUFBQUEbHAAAQEBAQAAAAAAAAAAAAAAAAAAABAM/Pz8/Pz8/P0BA
        QEAAAAAAAAAeIkFBQSMAAAAAAAAAACRBQUElIQAAAAAAAEBAQEA/Pz8/Pz8/PwUmAAAAAAM/Pz8/Pz8/
        Pz9AQEBAAAAAAAAAAB5BQUEfAAAAAAAAAAAgQUFBIQAAAAAAAABAQEBAPz8/Pz8/Pz8/BQAAAAADPz8/
        Pz8/Pz8/QEBAQAAAAAAAAAAAQUFBQUFBQUFBQUFBQUFBQQAAAAAAAAAAQEBAQD8/Pz8/Pz8/PwUAAAAA
        AQI/Pz8/Pz8/P0BAQEAAAAAAAAAAAEFBQUFBQUFBQUFBQUFBQUEAAAAAAAAAAEBAQEA/Pz8/Pz8/PwME
        AAAAAAAAAAAAAAAAAABAQEBAAAAAAAAAAAAbQUFBQUFBQUFBQUFBQUEdAAAAAAAAAABAQEBAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAQEBAQAAAAAAAAAAAGRpBQUFBQUFBQUFBQUEbHAAAAAAAAAAAQEBAQAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABZAQEATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0BA
        QBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARQEBAEhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ExRAQEAVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBA
        QEBAQEBAQEBAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYNQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBA
        QEBAQEBAQEBAQEBADwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA1AQEBAQEBAQEBAQEBAQEBAQEBA
        QEBAQEBAQEBAQEBAQEBADgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBwgJQEBAQEBAQEBAQEBA
        QEBAQEBAQEBAQEBAQEBAQAkICgsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPz8/PwAA
        AAAAAD8/Pz8AAAAAAAA/Pz8/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8/
        Pz8AAAAAAAA/Pz8/AAAAAAAAPz8/PwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA/Pz8/AAAAAAAAPz8/PwAAAAAAAD8/Pz8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAPz8/PwAAAAAAAD8/Pz8AAAAAAAA/Pz8/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAD8/Pz8AAAAAAAA/Pz8/AAAAAAAAPz8/PwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA/Pz8/AAAAAAAAPz8/PwAAAAAAAD8/Pz8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAPz8/PwAAAAAAAD8/Pz8AAAAAAAA/Pz8/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8/Pz8AAAAAAAA/Pz8/AAAAAAAAPz8/PwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADPz8FAAAAAAAAAz8/BQAAAAAAAAM/PwUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQIDBAAAAAAAAAECAwQAAAAAAAABAgMEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>